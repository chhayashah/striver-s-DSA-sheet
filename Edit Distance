class Solution {
    public int minDistance(String word1, String word2) {
           int n = word1.length();
        int m = word2.length();
        int[][] dp= new int[n][m];
        for(int[] d : dp){
           Arrays.fill(d , -1);

    }
     return Editdist(word1 , n-1 , word2 , m-1 , dp);
}
   public static int Editdist(String s1 , int i , String s2 , int j , int[][] dp){
        if(i==-1 && j==-1) return 0;
        if(i==-1 && j!=-1) return j+1;
        if(i!=-1 && j==-1) return i+1;
        
        if(dp[i][j] != -1) return dp[i][j];
      
        if(s1.charAt(i) == s2.charAt(j)){
           int x = Editdist(s1 , i-1 , s2 , j-1 , dp);
            dp[i][j] = x;
            return x;
        }   else{
             int x = Editdist(s1 , i-1 , s2 , j , dp);
                        int y = Editdist(s1 , i-1 , s2 , j-1 , dp);
             int z = Editdist(s1 , i , s2 , j-1 , dp);
             dp[i][j] = Math.min(Math.min(x,y),z)+1;
            return  dp[i][j];
        }
         
    }
}

